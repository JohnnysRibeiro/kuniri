#!/usr/bin/env ruby

require 'kuniri'
require 'optparse'
require 'kuniri/core/kuniri'
require 'kuniri/parser/xml_output_format'

options = {}

optionParser = OptionParser.new do |buildOptions|
  buildOptions.banner = "Usage: optionParser PATH [OPTIONS]"
  buildOptions.version = Kuniri::VERSION

  buildOptions.on("-v", "--[no-]verbose", "Run verbosely") do |verboseMode|
    options[:verbose] = verboseMode
  end

  buildOptions.on("--version", "Show Kuniri version") do |version|
    puts buildOptions.version
    exit
  end

  buildOptions.on("-o", "--output [DEST]", "Export") do |dest|
    options[:output] = dest
  end

  buildOptions.on("-O1", "--optimization 1,2,3", "Optimize", Numeric) do
    |optimization|
      options[:optimization] = optimization
  end

  buildOptions.on("-l", "--language [languageType]", "Define language") do
    |languageType|
    options[:languageType] = languageType
  end

  buildOptions.on("-e", "--export [FILENAME]", "Export XML") do
    |configurationFile|
      options[:configurationFile] = configurationFile
  end

end.parse!

def startParser
  puts "Exporting ..."
  unless (options[:output])
    options[:output] = 'outputKuniri/'
  end

  kuniri = Kuniri::Kuniri.new
  kuniri.run_analysis

  parser = Parser::XMLOutputFormat.new
  parser.set_path(options[:filename])
  parser.create_all_data(kuniri.get_parser())
end

options[:source] = ARGV[0]
